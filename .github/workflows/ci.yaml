# FIXME: refactor for multiple declation and cache
name: ci
permissions:
  pull-requests: write
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    runs-on: ubuntu-24.04
    permissions: {}
    timeout-minutes: 20
    concurrency:
      group: ${{ github.workflow }}-build-${{ github.ref }}
    steps:
      - name: Checkout files
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
          submodules: true

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "23"

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          # version: X.X.X
          # Optional when there is a packageManager field in the package.json.
          run_install: false

      - name: Get pnpm directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: pnpm i --frozen-lockfile
      - run: pnpm build
        env:
          AUTH_SECRET: ${{secrets.AUTH_SECRET}}
          AUTH0_CLIENT_ID: ${{secrets.AUTH0_CLIENT_ID}}
          AUTH0_CLIENT_SECRET: ${{secrets.AUTH0_CLIENT_SECRET}}
          AUTH0_ISAUTH0_ISSUER_BASE_URLSUER: ${{secrets.AUTH0_ISSUER_BASE_URL}}
          PUSHOVER_URL: ${{secrets.PUSHOVER_URL}}
          PUSHOVER_APP_TOKEN: ${{secrets.PUSHOVER_APP_TOKEN}}
          PUSHOVER_USER_KEY: ${{secrets.PUSHOVER_USER_KEY}}
          MINIO_ACCESS_KEY: ${{secrets.MINIO_ACCESS_KEY}}
          MINIO_BUCKET_NAME: ${{secrets.MINIO_BUCKET_NAME}}
          MINIO_HOST: ${{secrets.MINIO_HOST}}
          MINIO_PORT: ${{secrets.MINIO_PORT}}
          MINIO_SECRET_KEY: ${{secrets.MINIO_SECRET_KEY}}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          POSTGRES_DIRECT_URL: ${{ secrets.POSTGRES_DIRECT_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_REPORT_URL: ${{ secrets.SENTRY_REPORT_URL }}

  lint:
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
    timeout-minutes: 20
    concurrency:
      group: ${{ github.workflow }}-lint-${{ github.ref }}
    steps:
      - name: Checkout files
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
          submodules: true

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "23"

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          run_install: false

      - name: Get pnpm directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: pnpm i --frozen-lockfile
      - run: pnpm fmt:ci
      - run: pnpm lint
        env:
          SKIP_ENV_VALIDATION: true
          MINIO_HOST: ${{ secrets.MINIO_HOST }}

  test:
      runs-on: ubuntu-24.04
      permissions:
        pull-requests: write
      timeout-minutes: 20
      concurrency:
        group: ${{ github.workflow }}-test-${{ github.ref }}
      steps:
        - name: Checkout files
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
          with:
            persist-credentials: false
            submodules: true

        - name: Install Node.js
          uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
          with:
            node-version: "23"

        - name: Install pnpm
          uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
          with:
            run_install: false

        - name: Get pnpm directory
          shell: bash
          run: |
            echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

        - name: Cache dependencies
          uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
          with:
            path: ${{ env.STORE_PATH }}
            key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
              ${{ runner.os }}-node-
        - run: pnpm i --frozen-lockfile
        - run: pnpm exec playwright install
        - run: pnpm test
          env:
            MINIO_HOST: ${{secrets.MINIO_HOST}}
        - name: Show coverage
          if: always()
          uses: davelosert/vitest-coverage-report-action@7bf7d3c1b17a0e27c7e0d14190fb39168584bed2 # v2
          with:
            json-summary-path: ./.vitest-coverage/coverage-summary.json
            json-final-path: ./.vitest-coverage/coverage-final.json
        # - run: pnpm test:e2e # FIXME: later if I have time

  storybook:
    runs-on: ubuntu-24.04
    permissions: {}
    timeout-minutes: 20
    concurrency:
      group: ${{ github.workflow }}-storybook-${{ github.ref }}
    steps:
      - name: Checkout files
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
          submodules: true

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "23"

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          # version: X.X.X
          # Optional when there is a packageManager field in the package.json.
          run_install: false

      - name: Get pnpm directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: pnpm i --frozen-lockfile
      - run: pnpm storybook:build
        env:
          SKIP_ENV_VALIDATION: true
          MINIO_HOST: ${{ secrets.MINIO_HOST }}
