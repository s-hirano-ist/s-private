name: cd
permissions:
    contents: write
    pull-requests: write
on:
  pull_request:
    types: [opened, synchronize, edited]

jobs:
    build-push-s-private:
        permissions:
          contents: write
        runs-on: ubuntu-24.04
        if: contains(join(github.event.pull_request.labels.*.name, ','), 'autorelease')
        timeout-minutes: 20
        steps:

        - name: Checkout code
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
          with:
            persist-credentials: false
            submodules: true

        - name: Extract version from package.json
          run: echo "PACKAGE_VERSION=$(jq -r '.version' package.json)" >> "$GITHUB_ENV"

        - name: Log in to Docker Hub
          uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Extract Docker metadata
          id: meta
          uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
          with:
            images: ${{ secrets.DOCKER_HUB_USERNAME }}/s-private
            tags: |
              type=raw,value=latest
              type=raw,value=${{ env.PACKAGE_VERSION }}

        - name: Build and push Docker image with version tag
          uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            secrets: |
              AUTH_SECRET=${{secrets.AUTH_SECRET}}
              AUTH0_ID=${{secrets.AUTH0_ID}}
              AUTH0_SECRET=${{secrets.AUTH0_SECRET}}
              AUTH0_ISSUER=${{secrets.AUTH0_ISSUER}}
              PUSHOVER_URL=${{secrets.PUSHOVER_URL}}
              PUSHOVER_APP_TOKEN=${{secrets.PUSHOVER_APP_TOKEN}}
              PUSHOVER_USER_KEY=${{secrets.PUSHOVER_USER_KEY}}
              MINIO_ACCESS_KEY=${{secrets.MINIO_ACCESS_KEY}}
              MINIO_BUCKET_NAME=${{secrets.MINIO_BUCKET_NAME}}
              MINIO_HOST=${{secrets.MINIO_HOST}}
              MINIO_PORT=${{secrets.MINIO_PORT}}
              MINIO_SECRET_KEY=${{secrets.MINIO_SECRET_KEY}}
              NEXT_PUBLIC_G_TAG=${{secrets.NEXT_PUBLIC_G_TAG}}
              NEXT_PUBLIC_SENTRY_DSN=${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
              POSTGRES_DIRECT_URL=${{ secrets.POSTGRES_DIRECT_URL }}
              POSTGRES_URL=${{ secrets.POSTGRES_URL }}
              SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
              SENTRY_REPORT_URL=${{ secrets.SENTRY_REPORT_URL }}

        - name: Show pushed image tags
          run: echo "Pushed docker image with tag ${{ env.PACKAGE_VERSION }}"

    build-push-storybook:
      permissions:
        contents: write
      runs-on: ubuntu-24.04
      if: contains(join(github.event.pull_request.labels.*.name, ','), 'autorelease')
      timeout-minutes: 20
      steps:

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
          submodules: true

      - name: Extract version from package.json
        run: echo "PACKAGE_VERSION=$(jq -r '.version' package.json)" >> "$GITHUB_ENV"

      - name: Log in to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/s-storybook
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.PACKAGE_VERSION }}

      - name: Build and push Docker image with version tag
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: .
          file: ./.storybook/storybook.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Show pushed image tags
        run: echo "Pushed docker image with tag ${{ env.PACKAGE_VERSION }}"
